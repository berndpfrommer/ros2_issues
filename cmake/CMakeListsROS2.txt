#
# Copyright 2021 Bernd Pfrommer <bernd.pfrommer@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic -Werror)
endif()

if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE RelWithDebInfo)
endif()

find_package(ament_cmake REQUIRED)
find_package(ament_cmake_auto REQUIRED)
find_package(ament_cmake_ros REQUIRED)

find_package(rclcpp REQUIRED)
find_package(builtin_interfaces REQUIRED)
find_package(rosidl_default_generators REQUIRED)
find_package(std_msgs REQUIRED)

ament_auto_find_build_dependencies(REQUIRED rclcpp)

rosidl_generate_interfaces(${PROJECT_NAME}
  msg/TestArrayColumnMajor.msg
  msg/TestArrayColumnMajor2.msg
  msg/TestArrayComplex.msg
  msg/TestArraySimple.msg
  msg/TestElement.msg
  DEPENDENCIES builtin_interfaces std_msgs
  ADD_LINTER_TESTS)

ament_export_dependencies(rosidl_default_runtime)

ament_auto_add_executable(publisher_node
  src/publisher_node.cpp)

rosidl_target_interfaces(publisher_node
  ${PROJECT_NAME} "rosidl_typesupport_cpp")


ament_auto_add_executable(subscriber_node
  src/subscriber_node.cpp)

rosidl_target_interfaces(subscriber_node
  ${PROJECT_NAME} "rosidl_typesupport_cpp")


ament_auto_add_executable(publisher_node_complex
  src/publisher_node_complex.cpp)

rosidl_target_interfaces(publisher_node_complex
  ${PROJECT_NAME} "rosidl_typesupport_cpp")

install(TARGETS
  publisher_node
  publisher_node_complex
  subscriber_node
  DESTINATION lib/${PROJECT_NAME}/)

if(BUILD_TESTING)
  find_package(ament_cmake REQUIRED)
  find_package(ament_cmake_copyright REQUIRED)
  find_package(ament_cmake_cppcheck REQUIRED)
  find_package(ament_cmake_cpplint REQUIRED)
  find_package(ament_cmake_lint_cmake REQUIRED)

  ament_copyright()
  ament_cppcheck(LANGUAGE c++)
  ament_cpplint(FILTERS "-build/include,-runtime/indentation_namespace")
  ament_lint_cmake()
endif()

ament_package()

